---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: default
  annotations:
    kyverno.io/ignore: "true"
    secret.reloader.stakater.com/reload: cloudnative-pg
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:15.2-11
  primaryUpdateStrategy: unsupervised
  storage:
    size: 50Gi
    storageClass: rook-ceph-block
  superuserSecret:
    name: cloudnative-pg
  resources:
    requests:
      cpu: 100m
      memory: 1Gi
    limits:
      cpu: 500m
      memory: 2Gi
  monitoring:
    enablePodMonitor: true
  affinity:
    additionalPodAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - rook-ceph-osd
        topologyKey: "kubernetes.io/hostname"
  backup:
    retentionPolicy: 14d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://postgresql/
      endpointURL: https://s3.${SECRET_DOMAIN}:9000
      serverName: postgres-v2
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg
          key: aws-secret-access-key
  externalClusters:
    - name: postgres-backup
      barmanObjectStore:
        wal:
          compression: bzip2
          maxParallel: 8
        destinationPath: s3://postgresql/
        endpointURL: https://s3.${SECRET_DOMAIN}:9000
        serverName: "postgres-v1"
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg
            key: aws-access-key-id
          secretAccessKey:
            name: cloudnative-pg
            key: aws-secret-access-key
  bootstrap:
    recovery:
      source: postgres-backup
