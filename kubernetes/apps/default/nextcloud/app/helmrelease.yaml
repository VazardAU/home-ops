---
# yaml-language-server: $schema=https://kubernetes-schemas.haraldkoch.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app nextcloud
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 8.5.1
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      flavor: fpm-alpine
    nginx:
      enabled: true
    nextcloud:
      extraInitContainers:
        - name: init-db
          image: ghcr.io/haraldkoch/postgres-initdb:15.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: *app
      datadir: /var/www/data
      extraEnv:
        - name: REDIS_HOST
          value: redis-lb.default.svc.cluster.local.
        - name: REDIS_HOST_PORT
          value: "6379"
      phpClientHttpsFix:
        enabled: true
      existingSecret:
        enabled: true
        secretName: *app
        usernameKey: nextcloud-username
        passwordKey: nextcloud-password
      host: &host hub.${SECRET_CLUSTER_DOMAIN}
      mail:
        enabled: true
        fromAddress: admin
        domain: ${SECRET_CLUSTER_DOMAIN}
        smtp:
          host: smtp-relay.default.svc.cluster.local.
          port: ${SECRET_EMAIL_SMTP_PORT}
          authtype: NONE
          name: ""
          password: ""
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres-rw.default.svc.cluster.local.
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: *app
        usernameKey: POSTGRES_USER
        passwordKey: POSTGRES_PASS
    ingress:
      enabled: true
      className: nginx
      annotations:
        external-dns.home.arpa/enabled: "true"
        hajimari.io/icon: mdi:dropbox
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      path: /
      pathType: Prefix
      tls:
        - hosts:
            - *host
    persistence:
      enabled: true
      existingClaim: nextcloud-config
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
        accessMode: ReadWriteMany
    # this seems to be required for nextcloud initialization which takes a long time
    startupProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
