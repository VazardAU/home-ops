---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: readarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: readarr
      version: 6.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    controllerType: deployment
    image:
      repository: ghcr.io/k8s-at-home/readarr
      tag: v0.1.1.1352
      pullPolicy: IfNotPresent

    env:
      TZ: "${TIMEZONE}"

    persistence:
      config:
        enabled: true
        existingClaim: readarr-config
      books:
        enabled: true
        type: nfs
        server: "${LOCAL_LAN_TRUENAS}"
        path: /mnt/storage/home/claude/books
        mountPath: /mnt/storage/home/claude/books
      usenet:
        enabled: true
        type: nfs
        server: "${LOCAL_LAN_TRUENAS}"
        path: /mnt/storage/video/.usenet
        mountPath: /mnt/storage/video/.usenet
      qbittorrent-cache:
        enabled: true
        existingClaim: qbittorrent-cache
        mountPath: "/downloads"

    service:
      main:
        annotations:
          prometheus.io/probe: "true"
          prometheus.io/protocol: http

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "http://authelia.networking.svc.cluster.local/api/verify"
          nginx.ingress.kubernetes.io/auth-signin: "https://login.${SECRET_CLUSTER_DOMAIN}"
          # traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # traefik.ingress.kubernetes.io/router.middlewares: networking-forward-auth@kubernetescrd, networking-buffering-small@kubernetescrd
        hosts:
          - host: "readarr.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "readarr.${SECRET_CLUSTER_DOMAIN}"
      api:
        enabled: true
        ingressClassName: "nginx"
        # annotations:
        #  traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - host: "readarr.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /api
                pathType: Prefix
        tls:
          - hosts:
              - "readarr.${SECRET_CLUSTER_DOMAIN}"

    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 750Mi
