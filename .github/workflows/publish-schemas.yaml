---
  name: "Publish Schemas"

  on:
    workflow_dispatch:
    schedule:
      - cron: "0 0 * * 0"
    push:
      branches: ["main"]
      paths: [".github/workflows/publish-schemas.yaml"]

  jobs:
    publish-manifests:
      name: Publish Manifests
      runs-on: ["arc-runner-set-home-ops"]
      steps:
        - name: Setup Flux
          uses: fluxcd/flux2/action@9b3162495ce1b99b1fcdf137c553f543eafe3ec7 # v2.0.1

        - name: Setup Kube Tools
          uses: yokawasa/action-setup-kube-tools@9e25a4277af127b60011c95b6ed2da7e3b3613b1 # v0.11.2
          with:
            setup-tools: kubectl

        - name: Setup Python
          uses: actions/setup-python@3605726ffa6ef7750b99ff496e5b88248b414e26 # v4.9.0
          with:
            python-version: 3.x

        - name: Login to GitHub Container Registry
          uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
          with:
            registry: ghcr.io
            username: "${{ github.actor }}"
            password: "${{ secrets.GITHUB_TOKEN }}"

        - name: Setup crd-extractor
          uses: robinraju/release-downloader@daf26c55d821e836577a15f77d86ddc078948b05 # v1.12
          with:
            repository: datreeio/CRDs-catalog
            latest: true
            fileName: crd-extractor.zip

        - name: Write kubeconfig
          id: kubeconfig
          uses: timheuer/base64-to-file@adaa40c0c581f276132199d4cf60afa07ce60eac # v1.2
          with:
            encodedString: ${{ secrets.KUBECONFIG }}
            fileName: kubeconfig

        - name: Run crd-extractor
          env:
            KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
          shell: bash
          run: |
            unzip -j $GITHUB_WORKSPACE/crd-extractor.zip -d $GITHUB_WORKSPACE
            bash $GITHUB_WORKSPACE/crd-extractor.sh

        - name: Generate tag
          id: generate-tag
          shell: bash
          run: echo "tag=ghcr.io/${{ github.repository_owner }}/manifests/kubernetes-schemas:$(git rev-parse --short HEAD)" >> "${GITHUB_OUTPUT}"

        - name: Publish manifests
          shell: bash
          run: |
            flux push artifact oci://${{ steps.generate-tag.outputs.tag }} \
                --path="/home/runner/.datree/crdSchemas" \
                --source="${{ github.repositoryUrl }}" \
                --revision="${{ github.ref_name }}@sha1:$(git rev-parse HEAD)"

        - name: Tag manifests
          shell: bash
          run: flux tag artifact oci://${{ steps.generate-tag.outputs.tag }} --tag main

    publish-web:
      name: Publish Web
      runs-on: ubuntu-latest
      needs: ["publish-manifests"]
      steps:
        - name: Setup Flux
          uses: fluxcd/flux2/action@9b3162495ce1b99b1fcdf137c553f543eafe3ec7 # v2.0.1

        - name: Setup QEMU
          uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

        - name: Setup Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0

        - name: Login to GitHub Container Registry
          uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
          with:
            registry: ghcr.io
            username: "${{ github.actor }}"
            password: "${{ secrets.GITHUB_TOKEN }}"

        - name: Pull manifests
          shell: bash
          run: |
            mkdir -p /home/runner/crdSchemas
            flux pull artifact oci://ghcr.io/${{ github.repository_owner }}/manifests/kubernetes-schemas:$(git rev-parse --short HEAD) --output /home/runner/crdSchemas

        - name: Write nginx-unprivileged Dockerfile
          shell: bash
          run: |
            cat <<EOF > /home/runner/crdSchemas/Dockerfile
            FROM docker.io/nginxinc/nginx-unprivileged:latest
            COPY --chown=nginx:nginx --chmod=755 . /usr/share/nginx/html
            USER nginx
            EOF

        - name: Publish web container
          uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9 # v4.2.1
          with:
            context: /home/runner/crdSchemas
            platforms: linux/amd64,linux/arm64
            file: /home/runner/crdSchemas/Dockerfile
            push: true
            tags: |
              ghcr.io/${{ github.repository_owner }}/kubernetes-schemas:latest
            cache-from: type=gha
            cache-to: type=gha,mode=max
            labels: |
              org.opencontainers.image.source="${{ github.repositoryUrl }}"
