{
  "extends": [
    "config:base",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergeBranchPush",
    "github>auricom/home-ops//.github/renovate/autoMerge.json5",
    "github>auricom/home-ops//.github/renovate/commitMessage.json5",
    "github>auricom/home-ops//.github/renovate/disabledDatasources.json5",
    "github>auricom/home-ops//.github/renovate/groups.json5",
    "github>auricom/home-ops//.github/renovate/labels.json5"
  ],
  "platform": "github",
  "username": "feisar-bot[bot]",
  "repositories": ["auricom/home-ops"],
  "assignees": ["auricom"],
  "onboarding": false,
  "requireConfig": false,
  "gitAuthor": "feisar-bot <feisar-bot[bot]@users.noreply.github.com>",
  "dependencyDashboardTitle": "Renovate Dashboard ü§ñ",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "commitBodyTable": true,
  "commitMessagePrefix": "‚¨ÜÔ∏è",
  "ignorePaths": [],
  // set up renovate managers
  "docker-compose": {
    "fileMatch": ["ansible/.+/docker-compose.*\\.ya?ml(\\.j2)?$"]
  },
  "flux": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "helm-values": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "kubernetes": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "regexManagers": [
    {
      "description": "Process CRD dependencies",
      "fileMatch": ["cluster/.+\\.ya?ml$"],
      "matchStrings": [
        // GitRepository where 'Git release/tag' matches 'Helm' version
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)/(?<currentValue>[^/]+)/[^/]+\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}"
    },
    {
      "description": "Process various dependencies",
      "fileMatch": ["ansible/.+\\.ya?ml$", "cluster/.+\\.ya?ml$"],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "description": "Process raw GitHub URLs",
      "fileMatch": ["cluster/.+\\.ya?ml$"],
      "matchStrings": [
        "https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*"
      ],
      "datasourceTemplate": "github-releases",
      "versioningTemplate": "semver"
    }
  ],
  "packageRules": [
    // setup datasources
    {
      "matchDatasources": ["helm"],
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["major", "minor", "patch"],
      "commitMessageExtra": "to {{newVersion}}"
    },
    // custom versioning
    {
      "matchDatasources": ["docker"],
      "versioning": "loose",
      "matchPackageNames": ["ghcr.io/onedr0p/qbittorrent", "docker.io/zedeus/nitter", "quay.io/invidious/invidious"]
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": [
        "ghcr.io/linuxserver/calibre"
      ],
      "versioning": "regex:^version-v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$"
    }
  ]
}
