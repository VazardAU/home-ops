{
  "extends": [
    "config:base",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergeBranch",
    "github>VazardAU/home-ops//.github/renovate/autoMerge.json5",
    "github>VazardAU/home-ops//.github/renovate/commitMessage.json5",
    "github>VazardAU/home-ops//.github/renovate/groups.json5",
    "github>VazardAU/home-ops//.github/renovate/labels.json5",
    "github>VazardAU/home-ops//.github/renovate/semanticCommits.json5"
  ],
  "platform": "github",
  "username": "bunnings-bot[bot]",
  "repositories": ["VazardAU/home-ops"],
  "assignees": ["VazardAU"],
  "requireConfig": "optional",
  "gitAuthor": "bunnings-bot <bunnings-bot[bot]@users.noreply.github.com>",
  "dependencyDashboardTitle": "Renovate Dashboard ü§ñ",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "schedule": ["on monday"],
  "commitBodyTable": true,
  "commitMessagePrefix": "‚¨ÜÔ∏è",
  "ignorePaths": [],
  "pre-commit": {
    "enabled": true
  },
  "flux": {
    "fileMatch": ["kubernetes/.+\\.ya?ml$"]
  },
  "helm-values": {
    "fileMatch": ["kubernetes/.+\\.ya?ml$"]
  },
  "kubernetes": {
    "fileMatch": ["kubernetes/.+\\.ya?ml$"]
  },
  "regexManagers": [
    {
      "description": "Process custom dependencies",
      "fileMatch": [
        "ansible/.+\\.ya?ml$",
        "kubernetes/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    }
  ],
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "packageRules": [
    // setup datasources
    {
      "matchDatasources": ["helm"],
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["major", "minor", "patch"],
      "commitMessageExtra": "to {{newVersion}}"
    },
    // custom versioning
    {
      "matchDatasources": ["docker"],
      "versioning": "loose",
      "matchPackagePatterns": ["changedetection", "qbittorrent"]
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["ghcr.io/linuxserver/calibre"],
      "versioning": "regex:^version-v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$"
    }
  ]
}
